name: Reanimated compatibility check [Nightly]
on:
  pull_request:
  merge_group:
    branches:
      - main
  workflow_call:
  workflow_dispatch:

jobs:
  read-json:
    outputs:
      platforms: ${{ steps.set-matrix.outputs.platforms }}
    steps:
    - id: set-matrix
      run: |
        JSON=$(cat ./commonData/compatibility.json)

        JSON="${content//'%'/'%25'}"
        JSON="${content//$'\n'/'%0A'}"
        JSON="${content//$'\r'/'%0D'}"

        echo "::set-output name=matrix::${JSON//'%'/'%25'}"

  build:
    needs: read-json
    if: ${{github.repository == 'software-mansion/react-native-reanimated' && (github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'Check compatibility'))}}
    runs-on: ${{matrix.platform == 'iOS' && 'macos-14' || 'ubuntu-latest'}}
    strategy:
      matrix:
        platform:  ${{fromJson(needs.read-json.outputs.platforms)}}
        mode: ['Debug', 'Release']
        # TODO: Fetch compatibility in docs and here from common sources.
        # Update it when dropping support for RN versions.
        react-native:
          [
            { version: '0.72', architecture: 'Paper' },
            { version: '0.73', architecture: 'Paper' },
            { version: '0.74', architecture: 'Paper' },
            { version: '0.74', architecture: 'Fabric' },
            { version: '0.75', architecture: 'Paper' },
            { version: '0.75', architecture: 'Fabric' },
          ]
      fail-fast: false
    env:
      APP_NAME: app
      RCT_NEW_ARCH_ENABLED: ${{ matrix.react-native.architecture == 'Fabric' && '1' || '0' }}
    concurrency:
      group: react-native-nightly-reanimated-build-check-${{ matrix.react-native.version}}-${{matrix.platform}}-${{matrix.react-native.architecture}}-${{ matrix.mode }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Set up JDK 18
        if: ${{ matrix.platform == 'Android' }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '18'
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Create app
        run: |
          npx react-native@latest init ${{env.APP_NAME}} --version ${{ matrix.react-native.version }} --skip-install --pm yarn --skip-install --install-pods 0 --skip-git-init
      - name: Setup Yarn Modern
        # For convenience, sometimes there are vague issues with RN CLI and Yarn Legacy on the runner.
        working-directory: ${{ env.APP_NAME }}
        run: corepack enable && yarn set version berry
      - name: Install Reanimated
        working-directory: ${{ env.APP_NAME }}
        run: yarn add react-native-reanimated@https://github.com/software-mansion/react-native-reanimated.git#commit=${{ github.sha }}
      - name: Install Pods
        if: ${{ matrix.platform == 'iOS' }}
        working-directory: ${{ env.APP_NAME }}/ios
        run: bundle install && bundle exec pod install
      - name: Setup Fabric (Android)
        if: ${{ matrix.platform == 'Android' && matrix.react-native.architecture == 'Fabric' }}
        working-directory: ${{ env.APP_NAME }}/android
        run: sed -i 's/newArchEnabled=false/newArchEnabled=true/' gradle.properties
      - name: Build app (iOS)
        if: ${{ matrix.platform == 'iOS' }}
        working-directory: ${{ env.APP_NAME }}
        run: yarn react-native run-ios --simulator='iPhone 14' --terminal='Terminal'--mode=${{ matrix.mode }}
      - name: Build app (Android)
        if: ${{ matrix.platform == 'Android' }}
        working-directory: ${{ env.APP_NAME }}/android
        run: ./gradlew assemble${{ matrix.mode }} --console=plain
