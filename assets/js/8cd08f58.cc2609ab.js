"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[6819],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(t),p=a,f=m["".concat(s,".").concat(p)]||m[p]||d[p]||o;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},96067:(e,n,t)=>{t.d(n,{Z:()=>o});var r=t(67294);function a(e){let{value:n}=e;return r.createElement(r.Fragment,null,n?"\u2705":"\u274c")}function o(e){let{android:n=!1,ios:t=!1,web:o=!1}=e;return r.createElement("table",{className:"platform-compatibility"},r.createElement("thead",null,r.createElement("tr",null,r.createElement("th",null,"Android"),r.createElement("th",null,"iOS"),r.createElement("th",null,"Web"))),r.createElement("tbody",null,r.createElement("tr",null,r.createElement("td",null,r.createElement(a,{value:n})),r.createElement("td",null,r.createElement(a,{value:t})),r.createElement("td",null,r.createElement(a,{value:o})))))}},9554:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>b,contentTitle:()=>k,default:()=>I,frontMatter:()=>g,metadata:()=>y,toc:()=>v});var r=t(87462),a=t(67294),o=t(3905),i=t(96067),l=t(67177),s=t(24404),u=t(28033),c=t(42233);const m={code:"function RunOnUITsx1(){const{measure,animatedRef,runOnJS,onPress}=this.__closure;const measurements=measure(animatedRef);runOnJS(onPress)(measurements);}"};function d(e){const{children:n,onPress:t}=e,r=(0,c.useAnimatedRef)();return a.createElement(c.default.Text,{style:f.title,onPress:()=>{(0,c.runOnUI)(function(){const e=function(){const e=(0,c.measure)(r);(0,c.runOnJS)(t)(e)};return e.__closure={measure:c.measure,animatedRef:r,runOnJS:c.runOnJS,onPress:t},e.__workletHash=0xc6582d6c3d1,e.__initData=m,e}())()},ref:r},n)}function p(){const[e,n]=a.useState(0),t=e=>{n(Math.floor(e.width))};return a.createElement(l.Z,{style:f.container},["React","Native","Reanimated"].map((e=>a.createElement(d,{key:e,onPress:t},e))),a.createElement(s.Z,{style:f.label},"width: ",e))}const f=u.Z.create({container:{flex:1,alignItems:"center"},box:{height:100,width:100,backgroundColor:"#b58df1",borderRadius:20,marginVertical:64,alignSelf:"center"},title:{fontSize:42,textAlign:"center",fontWeight:"bold",marginRight:8},label:{fontSize:24,marginVertical:16,color:"#b58df1"}}),h="import React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport Animated, {\n  runOnJS,\n  measure,\n  useAnimatedRef,\n  runOnUI,\n  MeasuredDimensions,\n} from 'react-native-reanimated';\n\ntype MeasurableTextProps = React.PropsWithChildren<{\n  onPress: (measurements: MeasuredDimensions) => void;\n}>;\n\nfunction MeasurableText(props: MeasurableTextProps) {\n  const { children, onPress } = props;\n  const animatedRef = useAnimatedRef<Animated.View>();\n\n  const handleMeasure = () => {\n    // highlight-next-line\n    runOnUI(() => {\n      const measurements = measure(animatedRef);\n      runOnJS(onPress)(measurements);\n      // highlight-next-line\n    })();\n  };\n\n  return (\n    <Animated.Text\n      style={styles.title}\n      onPress={handleMeasure}\n      ref={animatedRef}>\n      {children}\n    </Animated.Text>\n  );\n}\n\nexport default function App() {\n  const [text, setText] = React.useState(0);\n\n  const handlePress = (measurements: MeasuredDimensions) => {\n    setText(Math.floor(measurements.width));\n  };\n\n  return (\n    <View style={styles.container}>\n      {['React', 'Native', 'Reanimated'].map((word) => (\n        <MeasurableText key={word} onPress={handlePress}>\n          {word}\n        </MeasurableText>\n      ))}\n      <Text style={styles.label}>width: {text}</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  box: {\n    height: 100,\n    width: 100,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n    marginVertical: 64,\n    alignSelf: 'center',\n  },\n  title: {\n    fontSize: 42,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginRight: 8,\n  },\n  label: {\n    fontSize: 24,\n    marginVertical: 16,\n    color: '#b58df1',\n  },\n});\n",g={sidebar_position:2},k="runOnUI",y={unversionedId:"threading/runOnUI",id:"threading/runOnUI",title:"runOnUI",description:"runOnUI lets you asynchronously run workletized functions on the UI thread.",source:"@site/docs/threading/runOnUI.mdx",sourceDirName:"threading",slug:"/threading/runOnUI",permalink:"/react-native-reanimated/docs/threading/runOnUI",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/threading/runOnUI.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"runOnJS",permalink:"/react-native-reanimated/docs/threading/runOnJS"},next:{title:"createWorkletRuntime",permalink:"/react-native-reanimated/docs/threading/createWorkletRuntime"}},b={},v=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"fn",id:"fn",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],O=(x="InteractiveExample",function(e){return console.warn("Component "+x+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var x;const w={toc:v},N="wrapper";function I(e){let{components:n,...t}=e;return(0,o.kt)(N,(0,r.Z)({},w,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"runonui"},"runOnUI"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"runOnUI")," lets you asynchronously run ",(0,o.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#to-workletize"},"workletized")," functions on the ",(0,o.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#ui-thread"},"UI thread"),"."),(0,o.kt)("p",null,"Most commonly used either with an ",(0,o.kt)("inlineCode",{parentName:"p"},"useEffect")," to start an animation on component mount/unmount or with ",(0,o.kt)("a",{parentName:"p",href:"/docs/advanced/measure"},(0,o.kt)("inlineCode",{parentName:"a"},"measure"))," and ",(0,o.kt)("a",{parentName:"p",href:"/docs/scroll/scrollTo"},(0,o.kt)("inlineCode",{parentName:"a"},"scrollTo"))," functions which have implementations only on the UI thread."),(0,o.kt)("h2",{id:"reference"},"Reference"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { runOnUI } from 'react-native-reanimated';\n\nfunction App() {\n  // E.g. in event handler or in an effect\n  // highlight-next-line\n  runOnUI((greeting) => {\n    console.log(`${greeting} from the UI thread`);\n    // highlight-next-line\n  })('Howdy');\n\n  // ...\n}\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Type definitions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"function runOnUI<A extends any[], R>(\n  fn: (...args: A) => R\n): (...args: Parameters<typeof fn>) => void;\n"))),(0,o.kt)("h3",{id:"arguments"},"Arguments"),(0,o.kt)("h4",{id:"fn"},"fn"),(0,o.kt)("p",null,"A reference to a function you want to execute on the ",(0,o.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#ui-thread"},"UI thread")," from the ",(0,o.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#javascript-thread"},"JavaScript thread"),". Arguments to your function have to be passed to the function returned from ",(0,o.kt)("inlineCode",{parentName:"p"},"runOnUI")," i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"runOnUI(myWorklet)(10);"),"."),(0,o.kt)("h3",{id:"returns"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"runOnUI")," returns a function that accepts arguments for the function passed as the first argument."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Don't forget to call the function returned from ",(0,o.kt)("inlineCode",{parentName:"p"},"runOnUI"),".")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(O,{src:h,component:p,label:"Tap each word",mdxType:"InteractiveExample"}),(0,o.kt)("h2",{id:"remarks"},"Remarks"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"When implementing your animations you should first reach for more general solutions such as ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/useDerivedValue"},(0,o.kt)("inlineCode",{parentName:"a"},"useDerivedValue")),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/advanced/useAnimatedReaction"},(0,o.kt)("inlineCode",{parentName:"a"},"useAnimatedReaction"))," or running code in gesture callbacks and only use ",(0,o.kt)("inlineCode",{parentName:"p"},"runOnUI")," after you've tried other methods.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"It's a common mistake to execute function inside of runOnUI like this: ",(0,o.kt)("del",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"del"},"runOnUI(myWorklet(10))()")),". Here, the correct usage would be ",(0,o.kt)("inlineCode",{parentName:"p"},"runOnUI(myWorklet)(10)"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The callback passed as the argument is automatically ",(0,o.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#to-workletize"},"workletized")," and ready to be run on the ",(0,o.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#ui-thread"},"UI thread"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Make sure not to execute ",(0,o.kt)("inlineCode",{parentName:"p"},"runOnUI")," on the UI thread as this will result in an error."))),(0,o.kt)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,o.kt)(i.Z,{android:!0,ios:!0,web:!0,mdxType:"PlatformCompatibility"}))}I.isMDXComponent=!0}}]);