"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[8533],{96067:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294);function i(e){let{value:t}=e;return a.createElement(a.Fragment,null,t?"\u2705":"\u274c")}function r(e){let{android:t=!1,ios:n=!1,web:r=!1}=e;return a.createElement("table",{className:"platform-compatibility"},a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Android"),a.createElement("th",null,"iOS"),a.createElement("th",null,"Web"))),a.createElement("tbody",null,a.createElement("tr",null,a.createElement("td",null,a.createElement(i,{value:t})),a.createElement("td",null,a.createElement(i,{value:n})),a.createElement("td",null,a.createElement(i,{value:r})))))}},32799:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>b,default:()=>T,frontMatter:()=>k,metadata:()=>g,toc:()=>w});var a=n(87462),i=n(67294),r=n(3905),l=n(96067),o=n(67177),s=n(24404),u=n(72400),d=n(28033),c=n(42233);const m={code:"function AnimatedReactionMeasureTsx1(){const{width}=this.__closure;return width.value;}"},p={code:"function AnimatedReactionMeasureTsx2(){const{measure,animatedRef,runOnJS,setText}=this.__closure;const measurement=measure(animatedRef);if(measurement!==null){runOnJS(setText)(measurement.width);}}"};function h(){const e=(0,c.useAnimatedRef)(),t=(0,c.useSharedValue)(100),[n,a]=i.useState(t.value);return(0,c.useAnimatedReaction)(function(){const e=()=>t.value;return e.__closure={width:t},e.__workletHash=0x9ca2f9b520a,e.__initData=m,e}(),function(){const t=function(){const t=(0,c.measure)(e);null!==t&&(0,c.runOnJS)(a)(t.width)};return t.__closure={measure:c.measure,animatedRef:e,runOnJS:c.runOnJS,setText:a},t.__workletHash=0xefdff183d98,t.__initData=p,t}()),i.createElement(o.Z,{style:f.container},i.createElement(c.default.View,{ref:e,style:{...f.box,width:t}}),i.createElement(s.Z,{style:f.label},"width: ",n),i.createElement(u.Z,{onPress:()=>{t.value=(0,c.withSpring)(t.value+50)},title:"Click me"}))}const f=d.Z.create({container:{flex:1,alignItems:"center"},box:{height:100,backgroundColor:"#b58df1",borderRadius:20},label:{fontSize:24,marginVertical:16,color:"#b58df1"}}),v="import React from 'react';\nimport { Button, StyleSheet, View, Text } from 'react-native';\nimport Animated, {\n  measure,\n  runOnJS,\n  useAnimatedReaction,\n  useAnimatedRef,\n  useSharedValue,\n  withSpring,\n} from 'react-native-reanimated';\n\nexport default function App() {\n  const animatedRef = useAnimatedRef<Animated.View>();\n  const width = useSharedValue<number>(100);\n  const [text, setText] = React.useState(width.value);\n\n  const handlePress = () => {\n    width.value = withSpring(width.value + 50);\n  };\n\n  // highlight-start\n  useAnimatedReaction(\n    () => width.value,\n    () => {\n      const measurement = measure(animatedRef);\n\n      if (measurement !== null) {\n        runOnJS(setText)(measurement.width);\n      }\n    }\n  );\n  // highlight-end\n\n  return (\n    <View style={styles.container}>\n      <Animated.View ref={animatedRef} style={{ ...styles.box, width }} />\n      <Text style={styles.label}>width: {text}</Text>\n      <Button onPress={handlePress} title=\"Click me\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  box: {\n    height: 100,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n  },\n  label: {\n    fontSize: 24,\n    marginVertical: 16,\n    color: '#b58df1',\n  },\n});\n",k={sidebar_position:2},b="useAnimatedReaction",g={unversionedId:"advanced/useAnimatedReaction",id:"advanced/useAnimatedReaction",title:"useAnimatedReaction",description:"useAnimatedReaction allows you to respond to changes in a shared value. It's especially useful when comparing values previously stored in the shared value with the current one.",source:"@site/docs/advanced/useAnimatedReaction.mdx",sourceDirName:"advanced",slug:"/advanced/useAnimatedReaction",permalink:"/react-native-reanimated/docs/advanced/useAnimatedReaction",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/advanced/useAnimatedReaction.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"measure",permalink:"/react-native-reanimated/docs/advanced/measure"},next:{title:"useFrameCallback",permalink:"/react-native-reanimated/docs/advanced/useFrameCallback"}},y={},w=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>prepare</code>",id:"prepare",level:4},{value:"<code>react</code>",id:"react",level:4},{value:"<code>dependencies</code> <Optional/>",id:"dependencies-",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],R=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},x=R("Optional"),A=R("InteractiveExample"),N=R("Indent"),C={toc:w},E="wrapper";function T(e){let{components:t,...n}=e;return(0,r.kt)(E,(0,a.Z)({},C,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"useanimatedreaction"},"useAnimatedReaction"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"useAnimatedReaction")," allows you to respond to changes in a ",(0,r.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#shared-value"},"shared value"),". It's especially useful when comparing values previously stored in the shared value with the current one."),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useAnimatedReaction } from 'react-native-reanimated';\n\nfunction App() {\n  useAnimatedReaction(\n    () => {\n      return sv.value;\n    },\n    (currentValue, previousValue) => {\n      if (currentValue !== previousValue) {\n        // do something \u2728\n      }\n    }\n  );\n\n  // ...\n}\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Type definitions"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"type DependencyList = ReadonlyArray<any>;\n\nfunction useAnimatedReaction<T>(\n  prepare: () => T,\n  react: (prepareResult: T, preparePreviousResult: T | null) => void,\n  dependencies?: DependencyList\n): void;\n"))),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("h4",{id:"prepare"},(0,r.kt)("inlineCode",{parentName:"h4"},"prepare")),(0,r.kt)("p",null,"A function that should return a value to which you'd like to react. The value returned from this function is used as the first parameter of the ",(0,r.kt)("inlineCode",{parentName:"p"},"react")," argument."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"function App() {\n  useAnimatedReaction(\n    // highlight-start\n    () => {\n      return Math.floor(sv.value);\n    },\n    // highlight-end\n    (currentValue, previousValue) => {\n      // ...\n    }\n  );\n}\n")),(0,r.kt)("h4",{id:"react"},(0,r.kt)("inlineCode",{parentName:"h4"},"react")),(0,r.kt)("p",null,"A function that reacts to changes in the value returned by the ",(0,r.kt)("inlineCode",{parentName:"p"},"prepare")," function. The ",(0,r.kt)("inlineCode",{parentName:"p"},"react")," function has two parameters: the current value from the ",(0,r.kt)("inlineCode",{parentName:"p"},"prepare")," function and the previous value, which is initially set to ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"function App() {\n  useAnimatedReaction(\n    () => {\n      return Math.floor(sv.value);\n    },\n    // highlight-next-line\n    (currentValue, previousValue) => {\n      // ...\n      // highlight-next-line\n    }\n  );\n}\n")),(0,r.kt)("h4",{id:"dependencies-"},(0,r.kt)("inlineCode",{parentName:"h4"},"dependencies")," ",(0,r.kt)(x,{mdxType:"Optional"})),(0,r.kt)("p",null,"An optional array of dependencies."),(0,r.kt)("p",null,"Only relevant when using Reanimated ",(0,r.kt)("a",{parentName:"p",href:"https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin"},"without the Babel plugin on the Web"),"."),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"useAnimatedReaction")," returns ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),"."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)(A,{src:v,component:h,mdxType:"InteractiveExample"}),(0,r.kt)("h2",{id:"remarks"},"Remarks"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ensure you do not mutate the same shared value in the ",(0,r.kt)("inlineCode",{parentName:"li"},"result")," function that you've used in the ",(0,r.kt)("inlineCode",{parentName:"li"},"prepare")," function, as this will lead to an infinite loop.")),(0,r.kt)(N,{mdxType:"Indent"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"function App() {\n  useAnimatedReaction(\n    () => {\n      // highlight-next-line\n      return width.value;\n    },\n    (currentValue) => {\n      // \ud83d\udea8 An infinite loop!\n      // highlight-next-line\n      width.value += currentValue;\n    }\n  );\n}\n"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Callbacks passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"prepare")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"result")," arguments are automatically ",(0,r.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#to-workletize"},"workletized")," and run on the ",(0,r.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#ui-thread"},"UI thread"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You can technically react to any stateful React value using ",(0,r.kt)("inlineCode",{parentName:"p"},"useAnimatedReaction")," but you should probably use a ",(0,r.kt)("inlineCode",{parentName:"p"},"useEffect")," for that instead."))),(0,r.kt)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,r.kt)(l.Z,{android:!0,ios:!0,web:!0,mdxType:"PlatformCompatibility"}))}T.isMDXComponent=!0},72400:(e,t,n)=>{n.d(t,{Z:()=>u});var a=n(67294),i=n(28033),r=n(88548),l=n(24404),o=a.forwardRef(((e,t)=>{var n=e.accessibilityLabel,i=e.color,o=e.disabled,u=e.onPress,d=e.testID,c=e.title;return a.createElement(r.Z,{accessibilityLabel:n,accessibilityRole:"button",disabled:o,focusable:!o,onPress:u,ref:t,style:[s.button,i&&{backgroundColor:i},o&&s.buttonDisabled],testID:d},a.createElement(l.Z,{style:[s.text,o&&s.textDisabled]},c))}));o.displayName="Button";var s=i.Z.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const u=o}}]);