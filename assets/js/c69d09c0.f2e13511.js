"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[5310],{79271:(e,t,n)=>{n.d(t,{Z:()=>p});var o=n(67294);const s="collapseButton_X7H2",a="arrow_XdVJ";var l;function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},i.apply(this,arguments)}const r=e=>{let{title:t,titleId:n,...s}=e;return o.createElement("svg",i({width:12,height:7,viewBox:"0 0 12 7",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},s),t?o.createElement("title",{id:n},t):null,l||(l=o.createElement("path",{d:"m1 1 5 5 5-5",stroke:"#001A72",strokeWidth:1.5,strokeLinecap:"round",strokeLinejoin:"round"})))};var c;function d(){return d=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},d.apply(this,arguments)}const m=e=>{let{title:t,titleId:n,...s}=e;return o.createElement("svg",d({width:12,height:7,viewBox:"0 0 12 7",fill:"none",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},s),t?o.createElement("title",{id:n},t):null,c||(c=o.createElement("path",{d:"m1 1 5 5 5-5",stroke:"#F8F9FF",strokeWidth:1.5,strokeLinecap:"round",strokeLinejoin:"round"})))};var f=n(92949),u=n(86010);const p=e=>{let{label:t,labelCollapsed:n,collapsed:l,onCollapse:i,className:c}=e;const{colorMode:d}=(0,f.I)();return o.createElement("div",{className:(0,u.default)(s,c),"data-collapsed":l,onClick:()=>i()},"light"===d?o.createElement(r,{className:a}):o.createElement(m,{className:a}),o.createElement("button",null,l?n:t))}},61837:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(67294),s=n(60614);const a={container:"container_oGcb",collapseButton:"collapseButton_YVdr"};var l=n(79271);function i(e){let{src:t,showLines:n}=e;const[i,r]=(0,o.useState)(!0);if(!n)return o.createElement(s.Z,{language:"jsx"},t);const[c,d]=n,m=t.split("\n").slice(c,d+1).join("\n");return o.createElement("div",{className:a.container},o.createElement(l.Z,{label:"Collapse the full code",labelCollapsed:"Expand the full code",collapsed:i,onCollapse:()=>r(!i),className:a.collapseButton}),o.createElement(s.Z,{language:"jsx"},i?m:t))}},9900:(e,t,n)=>{n.d(t,{Z:()=>k});var o=n(69116),s=n(67294),a=n(71435),l=n(28033),i=n(67177),r=n(24404),c=n(70399),d=n(76636),m=n(42233);const f=l.Z.create({squaresContainer:{display:"flex",flexDirection:"row",gap:16},square:{display:"flex",justifyContent:"center",alignItems:"center",width:100,height:100,backgroundColor:"#f8f9ff",borderRadius:20},listContainer:{display:"flex",flexDirection:"column",gap:6},listWrapper:{borderRadius:16,backgroundColor:"#f8f9ff"},listItem:{display:"flex",alignItems:"center",flexDirection:"row",gap:2,padding:8,paddingHorizontal:32}}),u=["#fa7f7c","#b58df1","#ffe780","#82cab2"],p=[{name:"Overview",content:"You can put here \u2728 anything \u2728 you want!"},{name:"Squares",content:s.createElement(i.Z,{style:f.squaresContainer},s.createElement(i.Z,{style:f.square},s.createElement(r.Z,null,"1")),s.createElement(i.Z,{style:f.square},s.createElement(r.Z,null,"2")),s.createElement(i.Z,{style:f.square},s.createElement(r.Z,null,"3")))},{name:"Shopping list",content:s.createElement(i.Z,{style:f.listContainer},s.createElement(i.Z,{style:f.listWrapper},s.createElement(r.Z,{style:f.listItem},"\ud83c\udf4e Apple ")),s.createElement(i.Z,{style:f.listWrapper},s.createElement(r.Z,{style:f.listItem},"\ud83c\udf4c Banana")),s.createElement(i.Z,{style:f.listWrapper},s.createElement(r.Z,{style:f.listItem},"\ud83e\udd56 Bread")))}];function h(e,t){let n;return void 0===t&&(t=100),function(){for(var o=arguments.length,s=new Array(o),a=0;a<o;a++)s[a]=arguments[a];clearTimeout(n),n=setTimeout((()=>{e(...s)}),t)}}const C={code:"function SectionListJs1(){const{selectedItem,item}=this.__closure;return{fontWeight:selectedItem.value===item?'600':'400',borderBottomWidth:selectedItem.value===item?1:0};}"},b=e=>{let{item:t,index:n,visibleIndex:o,sectionCardsRef:l}=e;const{colorScheme:i}=(0,a.tv)(),r=((e,t)=>(0,m.useAnimatedStyle)(function(){const n=()=>({fontWeight:e.value===t?"600":"400",borderBottomWidth:e.value===t?1:0});return n.__closure={selectedItem:e,item:t},n.__workletHash=0xb856942c7d6,n.__initData=C,n}()))(o,n),d={color:"light"===i?"#001a72":"#f8f9ff",borderBottomColor:"light"===i?"#001a72":"#f8f9ff"};return s.createElement(c.Z,{onPress:()=>{l.current?.scrollToIndex({index:n,animated:!0}),o.value=n},style:[g.tableOfContentsElement]},s.createElement(m.default.Text,{style:[r,g.tableOfContentsElement,d]},t))},y=e=>{let{data:t,visibleIndex:n,sectionCardsRef:a,tableOfContentsRef:l}=e;return s.createElement(i.Z,{style:g.tableOfContents},s.createElement(o.FlashList,{horizontal:!0,showsHorizontalScrollIndicator:!1,renderItem:e=>{let{item:t,index:o}=e;return s.createElement(b,{item:t,visibleIndex:n,index:o,sectionCardsRef:a})},data:t,estimatedItemSize:52,ref:l}))},g=l.Z.create({cardsContainer:{flex:1,justifyContent:"center",height:600},flex:{flex:1},tableOfContentsElement:{padding:4,marginHorizontal:4,margin:8,overflow:"hidden"},tableOfContents:{top:0}}),x={code:"function SectionListJs2(){const{colorScheme}=this.__closure;return{color:colorScheme==='light'?'#001a72':'#f8f9ff'};}"},S=e=>{let{sections:t,visibleIndex:n,sectionCardsRef:l,tableOfContentsRef:c}=e;const{colorScheme:d}=(0,a.tv)(),f=t.map((e=>350)),u=e=>{const t=e.nativeEvent?.contentOffset?.y;if(void 0!==t){const e=f.map(((e,t)=>f.slice(0,t).reduce(((e,t)=>e+t),0))).map((e=>Math.abs(e-t))),o=e.indexOf(Math.min.apply(null,e));n.value!==o&&c.current?.scrollToIndex({index:o,animated:!0}),n.value=o}},p=(0,m.useAnimatedStyle)(function(){const e=()=>({color:"light"===d?"#001a72":"#f8f9ff"});return e.__closure={colorScheme:d},e.__workletHash=1617939097340,e.__initData=x,e}());return s.createElement(i.Z,{style:g.flex},s.createElement(o.FlashList,{ref:l,estimatedItemSize:52,estimatedFirstItemOffset:0,renderItem:e=>{let{item:t}=e;return s.createElement(i.Z,null,s.createElement(m.default.Text,{style:[I.header,p]},t.name),s.createElement(w,null,s.createElement(r.Z,{style:I.content},t.content)))},data:t,onScrollBeginDrag:u,onScrollEndDrag:u,onScroll:h(u),onMomentumScrollBegin:u,onMomentumScrollEnd:u}))},v=()=>{const e=Math.floor(Math.random()*u.length);return u[e]},w=e=>{let{children:t}=e;const[n,o]=(0,s.useState)(v());return s.createElement(i.Z,{style:[I.container,{backgroundColor:n}]},t,s.createElement(c.Z,{style:I.button,onPress:()=>o(v())},s.createElement(r.Z,{style:I.buttonText},"Toggle section color \ud83c\udfa8")))},I=l.Z.create({container:{height:350,margin:16,display:"flex",alignItems:"center",justifyContent:"space-evenly",borderRadius:24},header:{textAlign:"center",fontSize:24,fontWeight:"bold"},content:{color:"#001a72"},button:{backgroundColor:"#f8f9ff",padding:12,borderRadius:48},buttonText:{color:"#001a72",padding:"0.5rem"}}),k=()=>{(0,m.useSharedValue)("");const e=(0,m.useSharedValue)(0),t=p.map((e=>e.name)),n=(0,s.useRef)(null),o=(0,s.useRef)(null);return s.createElement(d.Z,{style:g.cardsContainer},s.createElement(y,{data:t,visibleIndex:e,sectionCardsRef:n,tableOfContentsRef:o}),s.createElement(S,{sections:p,visibleIndex:e,tableOfContentsRef:o,sectionCardsRef:n}))}},19858:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>y,frontMatter:()=>r,metadata:()=>d,toc:()=>f});var o=n(87462),s=(n(67294),n(3905)),a=n(9900),l=n(27549),i=n(61837);const r={slug:"sectionlist",title:"Section List"},c=void 0,d={permalink:"/react-native-reanimated/examples/sectionlist",source:"@site/blog/section-list.md",title:"Section List",description:"Section lists allow you to organize long lists of content by dividing them with headings.",date:"2024-08-12T07:18:28.000Z",formattedDate:"August 12, 2024",tags:[],hasTruncateMarker:!1,authors:[],frontMatter:{slug:"sectionlist",title:"Section List"},prevItem:{title:"Marquee",permalink:"/react-native-reanimated/examples/marquee"},nextItem:{title:"Slider",permalink:"/react-native-reanimated/examples/slider"}},m={authorsImageUrls:[]},f=[],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",t)},p=u("InteractiveExample"),h=u("ExampleVideo"),C={toc:f},b="wrapper";function y(e){let{components:t,...n}=e;return(0,s.kt)(b,(0,o.Z)({},C,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Section lists allow you to organize long lists of content by dividing them with headings."),(0,s.kt)(p,{src:l.Z,component:a.Z,mdxType:"InteractiveExample"}),(0,s.kt)("p",null,"The primary component, ",(0,s.kt)("strong",{parentName:"p"},"SectionList"),", acts as the main orchestrator of the entire Section List interface. It coordinates the rendering of the table of contents and individual content sections."),(0,s.kt)("samp",{id:"SectionList"},"Section List"),(0,s.kt)(i.Z,{src:l.Z,showLines:[150,174],mdxType:"CollapsibleCode"}),(0,s.kt)("p",null,"Within ",(0,s.kt)("strong",{parentName:"p"},"SectionList"),", there are two key components: ",(0,s.kt)("strong",{parentName:"p"},"TableOfContents")," and ",(0,s.kt)("strong",{parentName:"p"},"SectionCards"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"TableOfContents")," is responsible for rendering the list of section names as a table of contents. It receives props such as ",(0,s.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"visibleIndex"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"sectionCardsRef"),", and ",(0,s.kt)("inlineCode",{parentName:"p"},"tableOfContentsRef")," to manage navigation and synchronization between the table of contents and section content."),(0,s.kt)("samp",{id:"SectionList"},"Section List"),(0,s.kt)(i.Z,{src:l.Z,showLines:[123,148],mdxType:"CollapsibleCode"}),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"SectionCards"),", on the other hand, manages the rendering of individual sections and their corresponding content. It receives props: ",(0,s.kt)("inlineCode",{parentName:"p"},"sections"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"visibleIndex"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"sectionCardsRef"),", and ",(0,s.kt)("inlineCode",{parentName:"p"},"tableOfContentsRef")," to render the content sections and handle scrolling interactions."),(0,s.kt)("samp",{id:"SectionList"},"Section List"),(0,s.kt)(i.Z,{src:l.Z,showLines:[198,256],mdxType:"CollapsibleCode"}),(0,s.kt)(h,{sources:{android:"/react-native-reanimated/recordings/examples/section_list_android.mov",ios:"/react-native-reanimated/recordings/examples/section_list_ios.mov"},mdxType:"ExampleVideo"}),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"onScroll")," in ",(0,s.kt)("strong",{parentName:"p"},"SectionCards")," calculates the offset as the user scrolls through the content and determines which section is currently most visible on the screen. It is done by comparing the distance of each section from the top of the screen - it identifies the section closest to the viewport's top edge."),(0,s.kt)(i.Z,{src:l.Z,showLines:[204,227],mdxType:"CollapsibleCode"}),(0,s.kt)("p",null,"We use the ",(0,s.kt)("inlineCode",{parentName:"p"},"useSharedValue")," hook to create mutable shared values across different components. For instance, ",(0,s.kt)("inlineCode",{parentName:"p"},"selectedItem")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"visibleIndex")," are ",(0,s.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#shared-value"},"shared values")," used to manage the currently selected section and its visibility index."),(0,s.kt)(i.Z,{src:l.Z,showLines:[151,152],mdxType:"CollapsibleCode"}),(0,s.kt)("p",null,"Additionally, we use ",(0,s.kt)("inlineCode",{parentName:"p"},"useAnimatedStyle")," hook to define ",(0,s.kt)("a",{parentName:"p",href:"/docs/core/useAnimatedStyle/"},"animated styles")," based on the shared values. Then, we apply these animated styles to components to create dynamic visual effects, such as changing font weights and adding bottom borders."),(0,s.kt)(i.Z,{src:l.Z,showLines:[96,99],mdxType:"CollapsibleCode"}),(0,s.kt)("p",null,"To enable interaction with the FlashList component - such as scrolling to specific sections, the code utilizes variables created using ",(0,s.kt)("inlineCode",{parentName:"p"},"useRef")," such as ",(0,s.kt)("inlineCode",{parentName:"p"},"sectionCardsRef")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"tableContentsRef")),(0,s.kt)(i.Z,{src:l.Z,showLines:[154,155],mdxType:"CollapsibleCode"}),(0,s.kt)("p",null,"Here, the ",(0,s.kt)("inlineCode",{parentName:"p"},"debounce")," function throttles the invocations of ",(0,s.kt)("inlineCode",{parentName:"p"},"onScroll")," event handler which improves the perfomrance."),(0,s.kt)(i.Z,{src:l.Z,showLines:[85,93],mdxType:"CollapsibleCode"}))}y.isMDXComponent=!0},27549:(e,t,n)=>{n.d(t,{Z:()=>o});const o="import { FlashList } from '@shopify/flash-list';\nimport React, { useRef, useState } from 'react';\nimport { useColorScheme } from '@mui/material';\nimport { Pressable, StyleSheet, Text, View, SafeAreaView } from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n} from 'react-native-reanimated';\n\nconst exampleStyles = StyleSheet.create({\n  squaresContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    gap: 16,\n  },\n  square: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 100,\n    height: 100,\n    backgroundColor: '#f8f9ff',\n    borderRadius: 20,\n  },\n  listContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 6,\n  },\n  listWrapper: {\n    borderRadius: 16,\n    backgroundColor: '#f8f9ff',\n  },\n  listItem: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    gap: 2,\n    padding: 8,\n    paddingHorizontal: 32,\n  },\n});\n\nconst SECTION_HEIGHT = 350;\n\nconst BRAND_COLORS = ['#fa7f7c', '#b58df1', '#ffe780', '#82cab2'];\n\nconst SECTIONS = [\n  {\n    name: 'Overview',\n    content: 'You can put here \u2728 anything \u2728 you want!',\n  },\n  {\n    name: 'Squares',\n    content: (\n      <View style={exampleStyles.squaresContainer}>\n        <View style={exampleStyles.square}>\n          <Text>1</Text>\n        </View>\n        <View style={exampleStyles.square}>\n          <Text>2</Text>\n        </View>\n        <View style={exampleStyles.square}>\n          <Text>3</Text>\n        </View>\n      </View>\n    ),\n  },\n  {\n    name: 'Shopping list',\n    content: (\n      <View style={exampleStyles.listContainer}>\n        <View style={exampleStyles.listWrapper}>\n          <Text style={exampleStyles.listItem}>\ud83c\udf4e Apple </Text>\n        </View>\n        <View style={exampleStyles.listWrapper}>\n          <Text style={exampleStyles.listItem}>\ud83c\udf4c Banana</Text>\n        </View>\n        <View style={exampleStyles.listWrapper}>\n          <Text style={exampleStyles.listItem}>\ud83e\udd56 Bread</Text>\n        </View>\n      </View>\n    ),\n  },\n];\n\nfunction debounce(func, timeout = 100) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func(...args);\n    }, timeout);\n  };\n}\n\nconst useSelectedStyle = (selectedItem, item) =>\n  useAnimatedStyle(() => ({\n    fontWeight: selectedItem.value === item ? '600' : '400',\n    borderBottomWidth: selectedItem.value === item ? 1 : 0,\n  }));\n\nconst TableOfContentsElement = ({\n  item,\n  index,\n  visibleIndex,\n  sectionCardsRef,\n}) => {\n  const { colorScheme } = useColorScheme();\n  const style = useSelectedStyle(visibleIndex, index);\n\n  const tableOfContentsElementTextStyle = {\n    color: colorScheme === 'light' ? '#001a72' : '#f8f9ff',\n    borderBottomColor: colorScheme === 'light' ? '#001a72' : '#f8f9ff',\n  };\n\n  return (\n    <Pressable\n      onPress={() => {\n        sectionCardsRef.current?.scrollToIndex({ index, animated: true });\n        visibleIndex.value = index;\n      }}\n      style={[sectionListStyles.tableOfContentsElement]}>\n      <Animated.Text\n        style={[\n          style,\n          sectionListStyles.tableOfContentsElement,\n          tableOfContentsElementTextStyle,\n        ]}>\n        {item}\n      </Animated.Text>\n    </Pressable>\n  );\n};\n\nconst TableOfContents = ({\n  data,\n  visibleIndex,\n  sectionCardsRef,\n  tableOfContentsRef,\n}) => {\n  return (\n    <View style={sectionListStyles.tableOfContents}>\n      <FlashList\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        renderItem={({ item, index }) => (\n          <TableOfContentsElement\n            item={item}\n            visibleIndex={visibleIndex}\n            index={index}\n            sectionCardsRef={sectionCardsRef}\n          />\n        )}\n        data={data}\n        estimatedItemSize={52}\n        ref={tableOfContentsRef}\n      />\n    </View>\n  );\n};\n\nconst SectionList = () => {\n  const selectedItem = useSharedValue('');\n  const visibleIndex = useSharedValue(0);\n  const sectionNames = SECTIONS.map((s) => s.name);\n  const sectionCardsRef = useRef(null);\n  const tableOfContentsRef = useRef(null);\n\n  return (\n    <SafeAreaView style={sectionListStyles.cardsContainer}>\n      <TableOfContents\n        data={sectionNames}\n        visibleIndex={visibleIndex}\n        sectionCardsRef={sectionCardsRef}\n        tableOfContentsRef={tableOfContentsRef}\n      />\n      <SectionCards\n        sections={SECTIONS}\n        visibleIndex={visibleIndex}\n        tableOfContentsRef={tableOfContentsRef}\n        sectionCardsRef={sectionCardsRef}\n      />\n    </SafeAreaView>\n  );\n};\n\nconst sectionListStyles = StyleSheet.create({\n  cardsContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    height: 600,\n  },\n  flex: {\n    flex: 1,\n  },\n  tableOfContentsElement: {\n    padding: 4,\n    marginHorizontal: 4,\n    margin: 8,\n    overflow: 'hidden',\n  },\n  tableOfContents: {\n    top: 0,\n  },\n});\n\nconst SectionCards = ({\n  sections,\n  visibleIndex,\n  sectionCardsRef,\n  tableOfContentsRef,\n}) => {\n  const { colorScheme } = useColorScheme();\n  const heights = sections.map((_) => SECTION_HEIGHT);\n\n  const getOffsetStarts = () =>\n    heights.map((v, i) => heights.slice(0, i).reduce((x, acc) => x + acc, 0));\n\n  const onScroll = (event) => {\n    const offset = event.nativeEvent?.contentOffset?.y;\n\n    if (offset !== undefined) {\n      const distancesFromTop = getOffsetStarts().map((v) =>\n        Math.abs(v - offset)\n      );\n      const newIndex = distancesFromTop.indexOf(\n        Math.min.apply(null, distancesFromTop)\n      );\n      if (visibleIndex.value !== newIndex) {\n        tableOfContentsRef.current?.scrollToIndex({\n          index: newIndex,\n          animated: true,\n        });\n      }\n      visibleIndex.value = newIndex;\n    }\n  };\n\n  const sectionNameStyle = useAnimatedStyle(() => ({\n    color: colorScheme === 'light' ? '#001a72' : '#f8f9ff',\n  }));\n\n  const renderItem = ({ item }) => {\n    return (\n      <View>\n        <Animated.Text style={[sectionCardStyles.header, sectionNameStyle]}>\n          {item.name}\n        </Animated.Text>\n        <SectionCardsElement>\n          <Text style={sectionCardStyles.content}>{item.content}</Text>\n        </SectionCardsElement>\n      </View>\n    );\n  };\n\n  return (\n    <View style={sectionListStyles.flex}>\n      <FlashList\n        ref={sectionCardsRef}\n        estimatedItemSize={52}\n        estimatedFirstItemOffset={0}\n        renderItem={renderItem}\n        data={sections}\n        onScrollBeginDrag={onScroll}\n        onScrollEndDrag={onScroll}\n        onScroll={debounce(onScroll)}\n        onMomentumScrollBegin={onScroll}\n        onMomentumScrollEnd={onScroll}\n      />\n    </View>\n  );\n};\n\nconst getRandomBrandColor = () => {\n  const colorIndex = Math.floor(Math.random() * BRAND_COLORS.length);\n  return BRAND_COLORS[colorIndex];\n};\n\nconst SectionCardsElement = ({ children }) => {\n  const [backgroundColor, setBackgroundColor] = useState(getRandomBrandColor());\n\n  return (\n    <View style={[sectionCardStyles.container, { backgroundColor }]}>\n      {children}\n      <Pressable\n        style={sectionCardStyles.button}\n        onPress={() => setBackgroundColor(getRandomBrandColor())}>\n        <Text style={sectionCardStyles.buttonText}>\n          Toggle section color \ud83c\udfa8\n        </Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst sectionCardStyles = StyleSheet.create({\n  container: {\n    height: SECTION_HEIGHT,\n    margin: 16,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    borderRadius: 24,\n  },\n  header: {\n    textAlign: 'center',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  content: {\n    color: '#001a72',\n  },\n  button: {\n    backgroundColor: '#f8f9ff',\n    padding: 12,\n    borderRadius: 48,\n  },\n  buttonText: {\n    color: '#001a72',\n    padding: '0.5rem',\n  },\n});\n\nexport default SectionList;\n"}}]);