"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[2078],{21313:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>y,default:()=>x,frontMatter:()=>f,metadata:()=>k,toc:()=>h});var a=n(87462),i=n(67294),o=n(3905),r=n(67177),l=n(70399),s=n(72400),m=n(28033),d=n(42233);function c(){const[e,t]=(0,i.useState)(!0),n=new d.Keyframe({0:{opacity:0,transform:[{translateY:50},{rotate:"820deg"},{skewX:"0deg"},{scale:0}]},50:{opacity:.5,transform:[{translateY:25},{rotate:"-180deg"},{skewX:"30deg"},{scale:.5}],easing:d.Easing.out(d.Easing.quad)},100:{opacity:1,transform:[{translateY:0},{rotate:"0deg"},{skewX:"0deg"},{scale:1}]}}).duration(1e3),a=new d.Keyframe({0:{opacity:1,transform:[{translateY:0},{rotateZ:"0deg"}]},10:{opacity:1,transform:[{translateY:25},{rotateZ:"0deg"}],easing:d.Easing.exp},50:{opacity:.5,transform:[{translateY:-100},{rotateZ:"60deg"}]},100:{opacity:0,transform:[{translateY:-300},{rotateZ:"120deg"}]}}).duration(1e3);return i.createElement(r.Z,{style:u.container},e&&i.createElement(d.default.View,{entering:n,exiting:a,style:u.box},i.createElement(l.Z,{onPress:()=>t(!e),style:u.button})),i.createElement(s.Z,{title:"Animate box",onPress:()=>t(!e)}))}const u=m.Z.create({container:{height:250,flex:1,justifyContent:"flex-end",alignItems:"center"},button:{height:"100%",width:"100%"},box:{width:100,height:100,backgroundColor:"#b58df1",borderRadius:24,justifyContent:"center",alignItems:"center",marginBottom:48}}),p="import React, { useState } from 'react';\nimport { View, Button, StyleSheet, Pressable } from 'react-native';\nimport Animated, { Keyframe, Easing } from 'react-native-reanimated';\n\nexport default function KeyframeExample() {\n  const [visible, setVisible] = useState(true);\n\n  const enteringAnimation = new Keyframe({\n    0: {\n      opacity: 0,\n      transform: [\n        { translateY: 50 },\n        { rotate: '820deg' },\n        { skewX: '0deg' },\n        { scale: 0 },\n      ],\n    },\n    50: {\n      opacity: 0.5,\n      transform: [\n        { translateY: 25 },\n        { rotate: '-180deg' },\n        { skewX: '30deg' },\n        { scale: 0.5 },\n      ],\n      easing: Easing.out(Easing.quad),\n    },\n    100: {\n      opacity: 1,\n      transform: [\n        { translateY: 0 },\n        { rotate: '0deg' },\n        { skewX: '0deg' },\n        { scale: 1 },\n      ],\n    },\n  }).duration(1000);\n\n  const exitingAnimation = new Keyframe({\n    0: {\n      opacity: 1,\n      transform: [{ translateY: 0 }, { rotateZ: '0deg' }],\n    },\n    10: {\n      opacity: 1,\n      transform: [{ translateY: 25 }, { rotateZ: '0deg' }],\n      easing: Easing.exp,\n    },\n    50: {\n      opacity: 0.5,\n      transform: [{ translateY: -100 }, { rotateZ: '60deg' }],\n    },\n    100: {\n      opacity: 0,\n      transform: [{ translateY: -300 }, { rotateZ: '120deg' }],\n    },\n  }).duration(1000);\n\n  return (\n    <View style={styles.container}>\n      {visible && (\n        <Animated.View\n          entering={enteringAnimation}\n          exiting={exitingAnimation}\n          style={styles.box}>\n          <Pressable\n            onPress={() => setVisible(!visible)}\n            style={styles.button}\n          />\n        </Animated.View>\n      )}\n      <Button title=\"Animate box\" onPress={() => setVisible(!visible)} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 250,\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  button: {\n    height: '100%',\n    width: '100%',\n  },\n  box: {\n    width: 100,\n    height: 100,\n    backgroundColor: '#b58df1',\n    borderRadius: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 48,\n  },\n});\n",f={sidebar_position:2},y="Keyframe animations",k={unversionedId:"layout-animations/keyframe-animations",id:"layout-animations/keyframe-animations",title:"Keyframe animations",description:"Keyframes are animation definition schemas that let you create complex animations. They allow you more flexibility than standard Entering and Exiting presets.",source:"@site/docs/layout-animations/keyframe-animations.mdx",sourceDirName:"layout-animations",slug:"/layout-animations/keyframe-animations",permalink:"/react-native-reanimated/docs/layout-animations/keyframe-animations",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/layout-animations/keyframe-animations.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Entering/Exiting animations",permalink:"/react-native-reanimated/docs/layout-animations/entering-exiting-animations"},next:{title:"Layout transitions",permalink:"/react-native-reanimated/docs/layout-animations/layout-transitions"}},g={},h=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>definitions</code>",id:"definitions",level:4},{value:"Modifiers",id:"modifiers",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Example",id:"example",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],b=(N="InteractiveExample",function(e){return console.warn("Component "+N+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var N;const v={toc:h},w="wrapper";function x(e){let{components:t,...n}=e;return(0,o.kt)(w,(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"keyframe-animations"},"Keyframe animations"),(0,o.kt)("p",null,"Keyframes are animation definition schemas that let you create complex animations. They allow you more flexibility than standard Entering and Exiting presets."),(0,o.kt)("h2",{id:"reference"},"Reference"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Keyframe } from 'react-native-reanimated';\n\nconst keyframe = new Keyframe({\n  0: {\n    transform: [{ rotate: '0deg' }],\n  },\n  45: {\n    transform: [{ rotate: '100deg' }],\n    easing: Easing.exp,\n  },\n  100: {\n    transform: [{ rotate: '45deg' }],\n  },\n});\n\nfunction App() {\n  return <Animated.View entering={keyframe} />;\n}\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Type definitions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"class Keyframe {\n  constructor(definitions: Record<string, KeyframeProps>);\n  duration(durationMs: number): Keyframe;\n  delay(delayMs: number): Keyframe;\n  reduceMotion(reduceMotionV: ReduceMotion): Keyframe;\n  withCallback(callback: (finished: boolean) => void): Keyframe;\n}\n"))),(0,o.kt)("h3",{id:"arguments"},"Arguments"),(0,o.kt)("h4",{id:"definitions"},(0,o.kt)("inlineCode",{parentName:"h4"},"definitions")),(0,o.kt)("p",null,"An object, that contains definitions of your animation.\nThe object keys should be within range ",(0,o.kt)("inlineCode",{parentName:"p"},"0-100")," and correspond to animation progress.\nThe object values should consist of style props and/or ",(0,o.kt)("a",{parentName:"p",href:"/docs/animations/withTiming/#easing"},"easing function"),". If easing property is not provided, it defaults to ",(0,o.kt)("inlineCode",{parentName:"p"},"Easing.linear"),"."),(0,o.kt)("p",null,"The keys take the following values:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"0")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"from"),": Initial state of the object."),(0,o.kt)("li",{parentName:"ul"},"Middle points (e.g., ",(0,o.kt)("inlineCode",{parentName:"li"},"45"),"): Intermediate states of the object."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"100")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"to"),": Final state of the object.")),(0,o.kt)("p",null,"The key ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," (or ",(0,o.kt)("inlineCode",{parentName:"p"},"from"),") should be assigned the style that you want for your object at the beginning of the animation. The key ",(0,o.kt)("inlineCode",{parentName:"p"},"100")," (or ",(0,o.kt)("inlineCode",{parentName:"p"},"to"),") should be assigned the style that you want for your object at the end of the animation."),(0,o.kt)("h2",{id:"modifiers"},"Modifiers"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"keyframe\n  .duration(1000)\n  .delay(500)\n  .reduceMotion(ReduceMotion.Never)\n  .withCallback((finished) => {\n    console.log(`finished without interruptions: ${finished}`);\n  });\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},".duration(durationMs: number)")," is the length of the animation (in milliseconds). Defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"500"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},".delay(durationMs: number)")," is the delay before the animation starts (in milliseconds). Defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},".reduceMotion(reduceMotion: ReduceMotion)")," determines how the animation responds to the device's reduced motion accessibility setting."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},".withCallback(callback: (finished: boolean) => void)")," is the callback that will fire after the animation ends. Sets ",(0,o.kt)("inlineCode",{parentName:"li"},"finished")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," when animation ends without interruptions, and ",(0,o.kt)("inlineCode",{parentName:"li"},"false")," otherwise.")),(0,o.kt)("h2",{id:"remarks"},"Remarks"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Providing keyframe ",(0,o.kt)("inlineCode",{parentName:"li"},"0")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"from")," is required as it contains the initial state of the object you want to animate."),(0,o.kt)("li",{parentName:"ul"},"Ensure you provide the initial value for all style properties you want to animate in other keyframes."),(0,o.kt)("li",{parentName:"ul"},"Do not provide both ",(0,o.kt)("inlineCode",{parentName:"li"},"0")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"from"),", or ",(0,o.kt)("inlineCode",{parentName:"li"},"100")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"to")," keyframes, as it will result in a parsing conflict."),(0,o.kt)("li",{parentName:"ul"},"If you want to animate transform style, make sure that all properties in the transformation array are in the same order in all keyframes.")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(b,{src:p,component:c,mdxType:"InteractiveExample"}),(0,o.kt)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,o.kt)("div",{className:"platform-compatibility"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Android"),(0,o.kt)("th",{parentName:"tr",align:null},"iOS"),(0,o.kt)("th",{parentName:"tr",align:null},"Web"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,o.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,o.kt)("td",{parentName:"tr",align:null},"\u2705"))))))}x.isMDXComponent=!0},72400:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(67294),i=n(28033),o=n(88548),r=n(24404),l=a.forwardRef(((e,t)=>{var n=e.accessibilityLabel,i=e.color,l=e.disabled,m=e.onPress,d=e.testID,c=e.title;return a.createElement(o.Z,{accessibilityLabel:n,accessibilityRole:"button",disabled:l,focusable:!l,onPress:m,ref:t,style:[s.button,i&&{backgroundColor:i},l&&s.buttonDisabled],testID:d},a.createElement(r.Z,{style:[s.text,l&&s.textDisabled]},c))}));l.displayName="Button";var s=i.Z.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const m=l}}]);