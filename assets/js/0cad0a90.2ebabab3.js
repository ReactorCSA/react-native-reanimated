"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[4609],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,f=c["".concat(p,".").concat(m)]||c[m]||d[m]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},96067:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294);function r(e){let{value:t}=e;return a.createElement(a.Fragment,null,t?"\u2705":"\u274c")}function o(e){let{android:t=!1,ios:n=!1,web:o=!1}=e;return a.createElement("table",{className:"platform-compatibility"},a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Android"),a.createElement("th",null,"iOS"),a.createElement("th",null,"Web"))),a.createElement("tbody",null,a.createElement("tr",null,a.createElement("td",null,a.createElement(r,{value:t})),a.createElement("td",null,a.createElement(r,{value:n})),a.createElement("td",null,a.createElement(r,{value:o})))))}},37868:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>S,contentTitle:()=>T,default:()=>I,frontMatter:()=>C,metadata:()=>N,toc:()=>_});var a=n(87462),r=n(67294),o=n(3905),i=n(96067),l=n(67177),p=n(28033),s=n(42233);const u={code:"function InterpolateTsx1(){const{interpolate,offset,width}=this.__closure;return{opacity:interpolate(offset.value,[-width/2+160,width/2-160],[1,0]),transform:[{translateX:offset.value}]};}"};function c(e){let{width:t}=e;const n=(0,s.useSharedValue)(t/2-160),a=(0,s.useAnimatedStyle)(function(){const e=()=>({opacity:(0,s.interpolate)(n.value,[-t/2+160,t/2-160],[1,0]),transform:[{translateX:n.value}]});return e.__closure={interpolate:s.interpolate,offset:n,width:t},e.__workletHash=8563490655549,e.__initData=u,e}());return r.useEffect((()=>{n.value=(0,s.withRepeat)((0,s.withTiming)(-n.value,{duration:1750}),-1,!0)}),[]),r.createElement(l.Z,{style:d.container},r.createElement(s.default.View,{style:[d.box,a]}))}const d=p.Z.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:120,width:120,backgroundColor:"#b58df1",borderRadius:20}}),m="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, {\n  useSharedValue,\n  useAnimatedStyle,\n  withTiming,\n  withRepeat,\n  interpolate,\n} from 'react-native-reanimated';\n\ninterface AppProps {\n  width: number;\n}\n\nexport default function App({ width }: AppProps) {\n  const offset = useSharedValue<number>(width / 2 - 160);\n\n  const animatedStyles = useAnimatedStyle(() => ({\n    // highlight-next-line\n    opacity: interpolate(\n      offset.value,\n      [-width / 2 + 160, width / 2 - 160],\n      [1, 0]\n    ),\n    transform: [{ translateX: offset.value }],\n  }));\n\n  React.useEffect(() => {\n    offset.value = withRepeat(\n      withTiming(-offset.value, { duration: 1750 }),\n      -1,\n      true\n    );\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Animated.View style={[styles.box, animatedStyles]} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n  },\n});\n";var f=n(44996),h=n(68160),y=n(24404);function g(){const e=(0,s.useSharedValue)(0);return r.createElement(h.cS,{style:E.container},r.createElement(l.Z,{style:E.wrapper},r.createElement(k,{offset:e,extrapolation:s.Extrapolation.EXTEND}),r.createElement(k,{offset:e,extrapolation:s.Extrapolation.CLAMP}),r.createElement(k,{offset:e,extrapolation:s.Extrapolation.IDENTITY})))}const v={code:"function InterpolateRotationTsx1(event){const{offset}=this.__closure;offset.value=event.translationX;}"},x={code:"function InterpolateRotationTsx2(){const{offset,withTiming}=this.__closure;offset.value=withTiming(0);}"},b={code:"function InterpolateRotationTsx3(){const{offset,interpolate,extrapolation}=this.__closure;return{transform:[{translateX:offset.value},{rotate:interpolate(offset.value,[-100,0,100],[-360,0,360],extrapolation)+'deg'}]};}"};function k(e){let{offset:t,extrapolation:n}=e;const a=h.oF.Pan().onChange(function(){const e=function(e){t.value=e.translationX};return e.__closure={offset:t},e.__workletHash=5058427765021,e.__initData=v,e}()).onFinalize(function(){const e=function(){t.value=(0,s.withTiming)(0)};return e.__closure={offset:t,withTiming:s.withTiming},e.__workletHash=4352894472670,e.__initData=x,e}()),o=(0,s.useAnimatedStyle)(function(){const e=()=>({transform:[{translateX:t.value},{rotate:(0,s.interpolate)(t.value,[-100,0,100],[-360,0,360],n)+"deg"}]});return e.__closure={offset:t,interpolate:s.interpolate,extrapolation:n},e.__workletHash=0xe415444afe0,e.__initData=b,e}());return r.createElement(h.Le,{gesture:a},r.createElement(s.default.View,{style:[E.box,o]},r.createElement(y.Z,{style:E.text},n.toUpperCase())))}const E=p.Z.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},wrapper:{flex:1,alignItems:"center",justifyContent:"center",height:"100%",width:200,borderLeftColor:"#b58df1",borderLeftWidth:1,borderRightColor:"#b58df1",borderRightWidth:1,borderStyle:"dashed"},box:{height:80,width:80,margin:20,borderWidth:1,borderColor:"#b58df1",borderRadius:20,alignItems:"center",justifyContent:"center",cursor:"grab"},text:{color:"#b58df1",textTransform:"uppercase",fontWeight:"bold"}}),w="import 'react-native-gesture-handler';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n  interpolate,\n  Extrapolation,\n} from 'react-native-reanimated';\nimport {\n  Gesture,\n  GestureDetector,\n  GestureHandlerRootView,\n} from 'react-native-gesture-handler';\nimport type { SharedValue } from 'react-native-reanimated';\n\nexport default function App() {\n  const offset = useSharedValue<number>(0);\n\n  return (\n    <GestureHandlerRootView style={styles.container}>\n      <View style={styles.wrapper}>\n        <Box offset={offset} extrapolation={Extrapolation.EXTEND} />\n        <Box offset={offset} extrapolation={Extrapolation.CLAMP} />\n        <Box offset={offset} extrapolation={Extrapolation.IDENTITY} />\n      </View>\n    </GestureHandlerRootView>\n  );\n}\n\ninterface BoxProps {\n  offset: SharedValue<number>;\n  extrapolation: Extrapolation;\n}\n\nfunction Box({ offset, extrapolation }: BoxProps) {\n  const pan = Gesture.Pan()\n    .onChange((event) => {\n      offset.value = event.translationX;\n    })\n    .onFinalize(() => {\n      offset.value = withTiming(0);\n    });\n\n  const animatedStyles = useAnimatedStyle(() => ({\n    transform: [\n      { translateX: offset.value },\n      {\n        // highlight-start\n        rotate:\n          interpolate(\n            offset.value,\n            [-100, 0, 100],\n            [-360, 0, 360],\n            extrapolation\n          ) + 'deg',\n        // highlight-end\n      },\n    ],\n  }));\n\n  return (\n    <GestureDetector gesture={pan}>\n      <Animated.View style={[styles.box, animatedStyles]}>\n        <Text style={styles.text}>{extrapolation.toUpperCase()}</Text>\n      </Animated.View>\n    </GestureDetector>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  wrapper: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: 200,\n    borderLeftColor: '#b58df1',\n    borderLeftWidth: 1,\n    borderRightColor: '#b58df1',\n    borderRightWidth: 1,\n    borderStyle: 'dashed',\n  },\n  box: {\n    height: 80,\n    width: 80,\n    margin: 20,\n    borderWidth: 1,\n    borderColor: '#b58df1',\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'grab',\n  },\n  text: {\n    color: '#b58df1',\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n  },\n});\n",C={sidebar_position:1},T="interpolate",N={unversionedId:"utilities/interpolate",id:"utilities/interpolate",title:"interpolate",description:"interpolate lets you map a value from one range to another using linear interpolation.",source:"@site/docs/utilities/interpolate.mdx",sourceDirName:"utilities",slug:"/utilities/interpolate",permalink:"/react-native-reanimated/docs/utilities/interpolate",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/utilities/interpolate.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Utilities",permalink:"/react-native-reanimated/docs/category/utilities"},next:{title:"clamp",permalink:"/react-native-reanimated/docs/utilities/clamp"}},S={},_=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>value</code>",id:"value",level:4},{value:"<code>input</code>",id:"input",level:4},{value:"<code>output</code>",id:"output",level:4},{value:"<code>extrapolate</code> <Optional/>",id:"extrapolate-",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],A=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},O=A("InteractiveExample"),P=A("Optional"),j={toc:_},D="wrapper";function I(e){let{components:t,...n}=e;return(0,o.kt)(D,(0,a.Z)({},j,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"interpolate"},"interpolate"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"interpolate")," lets you map a value from one range to another using linear interpolation."),(0,o.kt)(O,{src:m,component:c,mdxType:"InteractiveExample"}),(0,o.kt)("h2",{id:"reference"},"Reference"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { interpolate } from 'react-native-reanimated';\n\nfunction App() {\n  const animatedStyle = useAnimatedStyle(() => ({\n    // highlight-next-line\n    opacity: interpolate(sv.value, [0, 100], [0, 1], Extrapolation.CLAMP),\n  }));\n}\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Type definitions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"enum Extrapolation {\n  IDENTITY = 'identity',\n  CLAMP = 'clamp',\n  EXTEND = 'extend',\n}\n\ntype ExtrapolationAsString = 'identity' | 'clamp' | 'extend';\n\nexport type ExtrapolationType =\n  | ExtrapolationConfig\n  | Extrapolation\n  | ExtrapolationAsString\n  | undefined;\n\nfunction interpolate(\n  value: number,\n  input: readonly number[],\n  output: readonly number[],\n  extrapolate?: ExtrapolationType\n): number;\n"))),(0,o.kt)("h3",{id:"arguments"},"Arguments"),(0,o.kt)("h4",{id:"value"},(0,o.kt)("inlineCode",{parentName:"h4"},"value")),(0,o.kt)("p",null,"A number that is going to be mapped to the ",(0,o.kt)("inlineCode",{parentName:"p"},"output")," range."),(0,o.kt)("h4",{id:"input"},(0,o.kt)("inlineCode",{parentName:"h4"},"input")),(0,o.kt)("p",null,"An array of numbers specifying the input range of the interpolation."),(0,o.kt)("h4",{id:"output"},(0,o.kt)("inlineCode",{parentName:"h4"},"output")),(0,o.kt)("p",null,"An array of numbers specifying the output range of the interpolation. It should have at least the same number of points as the input range."),(0,o.kt)("h4",{id:"extrapolate-"},(0,o.kt)("inlineCode",{parentName:"h4"},"extrapolate")," ",(0,o.kt)(P,{mdxType:"Optional"})),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"extrapolate")," parameter determines what happens when the ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," goes beyond the ",(0,o.kt)("inlineCode",{parentName:"p"},"input")," range. Defaults to ",(0,o.kt)("inlineCode",{parentName:"p"},"Extrapolation.EXTEND"),"."),(0,o.kt)("p",null,"Available types:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Extrapolation.EXTEND")," - predicts the values beyond the output range."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Extrapolation.CLAMP")," - clamps the value to the edge of the output range."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Extrapolation.IDENTITY")," - returns the provided value as is.")),(0,o.kt)("div",{style:{display:"flex",justifyContent:"center",textAlign:"center"}},(0,o.kt)("div",{style:{maxWidth:320}},(0,o.kt)("img",{src:(0,f.Z)("/img/extrapolation/extend.png")}),(0,o.kt)("p",null,"EXTEND")),(0,o.kt)("div",{style:{maxWidth:320}},(0,o.kt)("img",{src:(0,f.Z)("/img/extrapolation/clamp.png")}),(0,o.kt)("p",null,"CLAMP")),(0,o.kt)("div",{style:{maxWidth:320}},(0,o.kt)("img",{src:(0,f.Z)("/img/extrapolation/identity.png")}),(0,o.kt)("p",null,"IDENTITY"))),(0,o.kt)("p",null,"This parameter also accepts string values:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"extend"')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"clamp"')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'"identity"'))),(0,o.kt)("p",null,"By default, the ",(0,o.kt)("inlineCode",{parentName:"p"},"extrapolate")," parameter applies the value passed to both edges of the range. To specify extrapolation to a particular edge, you can pass an object:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const opacity = interpolate(\n  sv.value,\n  [0, 100],\n  [0, 1],\n  // highlight-next-line\n  { extrapolateLeft: Extrapolation.CLAMP }\n);\n")),(0,o.kt)("h3",{id:"returns"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"interpolate")," returns a mapped value within the output range."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(O,{src:w,component:g,label:"Grab and drag any of the squares. The dashed lines indicate the range of the interpolation.",mdxType:"InteractiveExample"}),(0,o.kt)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,o.kt)(i.Z,{android:!0,ios:!0,web:!0,mdxType:"PlatformCompatibility"}))}I.isMDXComponent=!0}}]);