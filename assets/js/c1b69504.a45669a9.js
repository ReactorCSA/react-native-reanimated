"use strict";(self.webpackChunkdocs_reanimated=self.webpackChunkdocs_reanimated||[]).push([[7605],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>y});var r=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),p=o,y=u["".concat(l,".").concat(p)]||u[p]||m[p]||a;return n?r.createElement(y,i(i({ref:t},c),{},{components:n})):r.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},98348:(e,t,n)=>{n.d(t,{A:()=>a});var r=n(39235),o=n(72188);const a=()=>{const{colorScheme:e}=(0,r.Ut)();return"light"===e?i.darkText:i.lightText},i=o.A.create({lightText:{color:"var(--swm-off-white)"},darkText:{color:"var(--swm-navy-light-100)"}})},33169:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>v,default:()=>O,frontMatter:()=>g,metadata:()=>h,toc:()=>C});var r=n(58168),o=n(96540),a=n(15680),i=n(9176),s=n(78506),l=n(72188),d=n(45151),c=n(36579),u=n(98348);const m={code:"function RelativeCoordsTsx1(event){const{getRelativeCoords,animatedRef,setCoords}=this.__closure;const relativeCoords=getRelativeCoords(animatedRef,event.absoluteX,event.absoluteY);if(relativeCoords){setCoords(relativeCoords);}}"},p=l.A.create({container:{flex:1,justifyContent:"center",alignItems:"center"},innerView:{width:300,height:300,backgroundColor:"var(--swm-purple-light-80)",justifyContent:"center",alignItems:"center",borderRadius:40,cursor:"pointer"},coordsData:{fontSize:20,fontFamily:"Aeonik",color:"var(--swm-navy-light-100)"},coords:{marginBottom:16,fontWeight:"500"},text:{color:"var(--swm-off-white)",fontFamily:"Aeonik",fontSize:16,fontWeight:"bold"}}),y=()=>{const e=(0,d.useAnimatedRef)(),t=(0,u.A)(),[n,r]=(0,o.useState)({x:0,y:0}),a=c.q6.Tap().onEnd(function(){const t=function(t){const n=(0,d.getRelativeCoords)(e,t.absoluteX,t.absoluteY);n&&r(n)};return t.__closure={getRelativeCoords:d.getRelativeCoords,animatedRef:e,setCoords:r},t.__workletHash=1505519536525,t.__initData=m,t}());return o.createElement(i.A,{style:p.container},o.createElement(s.A,{style:[p.coordsData,t]},"Relative coordinates to parent:"),o.createElement(s.A,{style:[p.coordsData,p.coords,t]},"x=",n.x.toFixed()," y=",n.y.toFixed()),o.createElement(c.Sl,{gesture:a},o.createElement(d.default.View,{ref:e,style:p.innerView},o.createElement(s.A,{style:p.text},"Tap anywhere inside."))))},f="import React, { useState } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport Animated, {\n  useAnimatedRef,\n  getRelativeCoords,\n} from 'react-native-reanimated';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport useThemedTextStyle from '@site/src/hooks/useThemedTextStyle';\n\nconst RelativeCoords = () => {\n  const animatedRef = useAnimatedRef();\n  const textColor = useThemedTextStyle();\n  const [coords, setCoords] = useState({ x: 0, y: 0 });\n\n  const tapGesture = Gesture.Tap().onEnd((event) => {\n    const relativeCoords = getRelativeCoords(\n      animatedRef,\n      event.absoluteX,\n      event.absoluteY\n    );\n    if (relativeCoords) {\n      setCoords(relativeCoords);\n    }\n  });\n\n  return (\n    <View style={styles.container}>\n      <Text style={[styles.coordsData, textColor]}>\n        Relative coordinates to parent:\n      </Text>\n      <Text style={[styles.coordsData, styles.coords, textColor]}>\n        x={coords.x.toFixed()} y=\n        {coords.y.toFixed()}\n      </Text>\n      <GestureDetector gesture={tapGesture}>\n        <Animated.View ref={animatedRef} style={styles.innerView}>\n          <Text style={styles.text}>Tap anywhere inside.</Text>\n        </Animated.View>\n      </GestureDetector>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  innerView: {\n    width: 300,\n    height: 300,\n    backgroundColor: 'var(--swm-purple-light-80)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 40,\n    cursor: 'pointer',\n  },\n  coordsData: {\n    fontSize: 20,\n    fontFamily: 'Aeonik',\n    color: 'var(--swm-navy-light-100)',\n  },\n  coords: {\n    marginBottom: 16,\n    fontWeight: '500',\n  },\n  text: {\n    color: 'var(--swm-off-white)',\n    fontFamily: 'Aeonik',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RelativeCoords;\n",g={sidebar_position:4},v="getRelativeCoords",h={unversionedId:"utilities/getRelativeCoords",id:"utilities/getRelativeCoords",title:"getRelativeCoords",description:"getRelativeCoords determines the location on the screen, relative to the given view.",source:"@site/docs/utilities/getRelativeCoords.mdx",sourceDirName:"utilities",slug:"/utilities/getRelativeCoords",permalink:"/react-native-reanimated/docs/utilities/getRelativeCoords",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/edit/main/packages/docs-reanimated/docs/utilities/getRelativeCoords.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"interpolateColor",permalink:"/react-native-reanimated/docs/utilities/interpolateColor"},next:{title:"Advanced APIs",permalink:"/react-native-reanimated/docs/category/advanced-apis"}},b={},C=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>animatedRef</code>",id:"animatedref",level:4},{value:"<code>absoluteX</code>",id:"absolutex",level:4},{value:"<code>absoluteY</code>",id:"absolutey",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3},{value:"Platform compatibility",id:"platform-compatibility",level:2}],x=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.yg)("div",t)},w=x("InteractiveExample"),R=x("PlatformCompatibility"),T={toc:C},A="wrapper";function O(e){let{components:t,...n}=e;return(0,a.yg)(A,(0,r.A)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"getrelativecoords"},"getRelativeCoords"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"getRelativeCoords")," determines the location on the screen, relative to the given view."),(0,a.yg)("h2",{id:"reference"},"Reference"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"import { getRelativeCoords } from 'react-native-reanimated';\n\nconst Comp = () => {\n  const animatedRef = useAnimatedRef();\n  // ...\n\n  const gestureHandler = useAnimatedGestureHandler({\n    onEnd: (event) => {\n      const coords = getRelativeCoords(\n        animatedRef,\n        event.absoluteX,\n        event.absoluteY\n      );\n    },\n  });\n\n  return (\n    <View ref={aref}>\n      <PanGestureHandler onGestureEvent={gestureHandler}>\n        <Animated.View style={[styles.box]} />\n      </PanGestureHandler>\n    </View>\n  );\n};\n")),(0,a.yg)("details",null,(0,a.yg)("summary",null,"Type definitions"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"function getRelativeCoords(\n  animatedRef: AnimatedRef<Component>,\n  absoluteX: number,\n  absoluteY: number\n): ComponentCoords | null;\n\ninterface ComponentCoords {\n  x: number;\n  y: number;\n}\n"))),(0,a.yg)("h3",{id:"arguments"},"Arguments"),(0,a.yg)("h4",{id:"animatedref"},(0,a.yg)("inlineCode",{parentName:"h4"},"animatedRef")),(0,a.yg)("p",null,"The product of ",(0,a.yg)("a",{parentName:"p",href:"/docs/core/useAnimatedRef"},(0,a.yg)("inlineCode",{parentName:"a"},"useAnimatedRef"))," is Reanimated's extension of a standard React ref (delivers the view tag on the UI thread). This ref should be passed as a prop to the view relative to which we want to know coordinates."),(0,a.yg)("h4",{id:"absolutex"},(0,a.yg)("inlineCode",{parentName:"h4"},"absoluteX")),(0,a.yg)("p",null,"Number which is an absolute ",(0,a.yg)("inlineCode",{parentName:"p"},"x")," coordinate."),(0,a.yg)("h4",{id:"absolutey"},(0,a.yg)("inlineCode",{parentName:"h4"},"absoluteY")),(0,a.yg)("p",null,"Number which is an absolute ",(0,a.yg)("inlineCode",{parentName:"p"},"y")," coordinate."),(0,a.yg)("h3",{id:"returns"},"Returns"),(0,a.yg)("p",null,"Object which contains relative coordinates"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"x")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"y"))),(0,a.yg)("h3",{id:"example"},"Example"),(0,a.yg)(w,{src:f,component:y,mdxType:"InteractiveExample"}),(0,a.yg)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,a.yg)(R,{android:!0,ios:!0,web:!0,mdxType:"PlatformCompatibility"}))}O.isMDXComponent=!0}}]);